// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String
  avatar     String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  tokens     Token[]
  tweets     Tweet[]
  likes      Like[]
  bookmarks  Bookmark[]
  replies    Reply[]
  followedBy User[]     @relation("follows")
  following  User[]     @relation("follows")
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tweet {
  id        Int        @id @default(autoincrement())
  content   String
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  views     Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  likes     Like[]
  bookmarks Bookmark[]
  Hashtag   Hashtag[]
  replies   Reply[]
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId   Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId   Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Hashtag {
  id      Int    @id @default(autoincrement())
  tweet   Tweet  @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId Int
  hashtag String
}

model Reply {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId   Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}
